[{"content":"Welcome to my personal website üëã\nI‚Äôm Keyhan Kamyar, a Machine Learning Engineer from Iran specializing in reinforcement learning, quantitative modeling, and AI-driven systems.\nThis blog is where I‚Äôll share:\nMy research and open-source projects Engineering insights, tips, and tutorials Reflections on my personal and professional journey I built this site using Hugo and GitHub Pages to create a fast, lightweight, and fully open platform for my work.\nMore posts and projects coming soon üöÄ\n","permalink":"http://localhost:1313/posts/welcome/","summary":"\u003cp\u003eWelcome to my personal website üëã\u003c/p\u003e\n\u003cp\u003eI‚Äôm \u003cstrong\u003eKeyhan Kamyar\u003c/strong\u003e, a Machine Learning Engineer from Iran specializing in reinforcement learning, quantitative modeling, and AI-driven systems.\u003c/p\u003e\n\u003cp\u003eThis blog is where I‚Äôll share:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMy research and open-source projects\u003c/li\u003e\n\u003cli\u003eEngineering insights, tips, and tutorials\u003c/li\u003e\n\u003cli\u003eReflections on my personal and professional journey\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eI built this site using \u003ca href=\"https://gohugo.io\"\u003eHugo\u003c/a\u003e and \u003ca href=\"https://pages.github.com\"\u003eGitHub Pages\u003c/a\u003e to create a fast, lightweight, and fully open platform for my work.\u003c/p\u003e\n\u003cp\u003eMore posts and projects coming soon üöÄ\u003c/p\u003e","title":"Hello"},{"content":"üë§ Background I\u0026rsquo;ve spent the last eight years building AI systems‚Äînot the kind that generate memes, but the kind that make decisions under uncertainty, process massive datasets, and run in production without falling over.\nStarted in urban engineering, quickly realized I needed more logic and less art. Switched to computer science. Built and scaled a retail business to fund my education, then left it to focus entirely on what actually kept me awake at night: making machines learn.\nüõ§Ô∏è The Journey 2016-2017 ‚Ä¢ First Company ‚Äî Co-founded MasterCom, tried game development, realized I was more interested in the systems than the games. Pivoted to UI development with Qt/QML. Shipped 13+ projects. Learned what I didn\u0026rsquo;t want to do.\n2017-2018 ‚Ä¢ Financial Markets ‚Äî Discovered Forex trading. Six months of pure research before touching a demo account. Built backtesting systems, learned signal processing, feature engineering, risk management. Realized simple strategies don\u0026rsquo;t work‚Äîmarkets are adversarial.\n2018-2020 ‚Ä¢ Deep Learning ‚Äî Dove into machine learning. Andrew Ng\u0026rsquo;s courses, then straight into PyTorch. Computer vision, NLP, time-series forecasting. Read papers as they dropped from arXiv. Built a dual RTX 2080 Ti rig. Implemented everything from scratch to understand how it actually works.\n2020-2021 ‚Ä¢ Dideo (Video Platform) ‚Äî First real ML role. Built data pipelines processing petabytes of visual data. Custom Numba kernels that beat C++ implementations. Synthetic data generation systems. Learned production ML isn\u0026rsquo;t just about accuracy‚Äîit\u0026rsquo;s about throughput, maintainability, and human-in-the-loop workflows.\n2021-2022 ‚Ä¢ Deep RL ‚Äî Deep dive into reinforcement learning. Traditional RL, then Deep RL. Built custom Gymnasium environments. Trained agents on financial markets. Spent six months failing to make stable models‚Äîlearned more from failure than from any tutorial. Built scalable RL frameworks from scratch.\n2022-2024 ‚Ä¢ MetaScape (Fintech) ‚Äî Built news scraping pipelines, sentiment analysis systems, portfolio optimization with RL. First experience with production CI/CD, structured logging, and the reality that 80% of ML engineering is data engineering.\n2024-Present ‚Ä¢ Independent Research ‚Äî Reformulating trading as multi-armed bandits instead of sequential RL. Building systems that scale. Shipping open-source tools. Looking for the next challenge.\nüí≠ Technical Philosophy Theory is the map; implementation is the territory. I read papers to understand principles, then build systems to find out what actually works. Most breakthrough papers have implementation details that make or break their claims.\nOptimization isn\u0026rsquo;t premature if you understand the bottleneck. Custom Numba kernels, memory-mapped arrays, vectorized operations‚Äîthese aren\u0026rsquo;t tricks, they\u0026rsquo;re prerequisites when you\u0026rsquo;re processing 100M+ rows.\nProduction systems need different skills than research code. Type safety with Pydantic, comprehensive logging, graceful degradation, monitoring, testing‚Äîthese aren\u0026rsquo;t optional. They\u0026rsquo;re what separates a notebook from a product.\nThe best code is boring code. Clear names, simple logic, obvious structure. Clever code is a liability. Maintainable code is an asset.\nüåç Current Situation Based in Iran. Married. Just got my passport after resolving military service exemption (medical). Dealing with 200%+ annual inflation, frequent power outages, economic collapse, and the aftermath of literal war.\nI\u0026rsquo;m not leaving because Iran is bad at tech‚Äîthere are brilliant people here. I\u0026rsquo;m leaving because constraints compound. Every project requires workarounds. Every tool requires VPNs. Every transaction requires currency exchange calculations. Every plan includes \u0026ldquo;what if the internet goes down again.\u0026rdquo;\nI have about 1-2 years of runway with current savings and passive income. Looking for opportunities where I can focus on building systems instead of navigating geopolitics.\nüéØ What I\u0026rsquo;m Looking For Research labs or companies working on:\nDeep RL for real-world control problems Financial ML / quantitative systems Large-scale ML infrastructure Systems that actually ship to users Places where \u0026ldquo;we should try that paper\u0026rdquo; leads to \u0026ldquo;here\u0026rsquo;s the implementation\u0026rdquo; within days, not months. Teams that value builders over talkers.\nüì¨ Contact ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-background\"\u003eüë§ Background\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;ve spent the last eight years building AI systems‚Äînot the kind that generate memes, but the kind that make decisions under uncertainty, process massive datasets, and run in production without falling over.\u003c/p\u003e\n\u003cp\u003eStarted in urban engineering, quickly realized I needed more logic and less art. Switched to computer science. Built and scaled a retail business to fund my education, then left it to focus entirely on what actually kept me awake at night: making machines learn.\u003c/p\u003e","title":"About"},{"content":"üöÄ Open Source TickVault High-performance financial tick data scraper for Dukascopy Bank\u0026rsquo;s historical datafeed. Built for quantitative researchers and algorithmic traders who need reliable access to high-resolution market data.\nFeatures:\nConcurrent downloads with intelligent resume capability Proxy support for distributed downloading Efficient LZMA decompression and NumPy-based decoding Pandas integration with gap detection SQLite metadata tracking Stack: Python ‚Ä¢ httpx ‚Ä¢ NumPy ‚Ä¢ Pandas ‚Ä¢ SQLite ‚Ä¢ LZMA\nProxyRotator Production-ready async Python library for managing VMESS proxy rotation with automatic subscription updates, connection testing, and user-agent rotation. Perfect for web scraping projects requiring reliable proxy management.\nFeatures:\nAutomatic proxy rotation with subscription support Connection testing and filtering of working proxies User-agent rotation for each proxy Rate limiting with jitter for natural request patterns Thread-safe with context manager support Stack: Python ‚Ä¢ httpx ‚Ä¢ Xray-core ‚Ä¢ Pydantic ‚Ä¢ asyncio\nüî¨ Research \u0026amp; Tools (Coming Soon) SAM2 Realtime Predictor Real-time video segmentation optimized for live camera feeds and streaming video. Text-prompted segmentation achieving 40+ FPS through custom kernel optimizations and TensorRT compilation.\nStatus: Polishing ‚Ä¢ Expected Q1 2025\nTunable Config Research-grade library unifying Optuna (HPO), neural architecture search, and feature selection with type-safe Pydantic configs. Distilled from years of experimentation into clean, reusable patterns.\nStatus: Planning ‚Ä¢ Expected Q2 2025\nClean-TS Modular, Pythonic reimplementation of canonical time-series architectures. Makes archaic, opaque TS codebases readable, extensible, and reproducible.\nStatus: Refactoring ‚Ä¢ Expected Q2 2025\nüíº Production Work Throughout my career, I\u0026rsquo;ve built production systems that aren\u0026rsquo;t open-source but demonstrate real-world ML engineering:\nSentiment Analysis Pipeline ‚Äî MetaScape, 2022-2024\nNews scraping, SBERT embeddings, financial sentiment classification with 69% accuracy. Handled automatic retraining and drift detection in production.\nSynthetic Data Generation ‚Äî Dideo, 2020-2021\nHuman-in-the-loop system for nudity detection. Achieved 200x speedup in data generation through active learning and automatic nightly finetuning.\nRL Trading Framework ‚Äî Independent, 2021-Present\nCustom Gymnasium environments, distributed training, HPO + NAS pipelines. Multi-armed bandit reformulation of trading problems. Currently training at scale (compute-limited).\nDefect Detection ‚Äî Contract Work, 2022\nYOLOv7-based quality control for pottery manufacturing. Reduced supervision staff from 5 to 1 with just a PC and webcam.\n","permalink":"http://localhost:1313/projects/","summary":"\u003ch2 id=\"-open-source\"\u003eüöÄ Open Source\u003c/h2\u003e\n\u003ch3 id=\"tickvault\"\u003eTickVault\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/keyhankamyar/TickVault\"\u003e\u003cimg alt=\"GitHub\" loading=\"lazy\" src=\"https://img.shields.io/badge/GitHub-TickVault-181717?style=flat-square\u0026logo=github\"\u003e\u003c/a\u003e\n\u003ca href=\"https://pypi.org/project/tick-vault/\"\u003e\u003cimg alt=\"PyPI\" loading=\"lazy\" src=\"https://img.shields.io/pypi/v/tick-vault?style=flat-square\u0026logo=pypi\u0026logoColor=white\"\u003e\u003c/a\u003e\n\u003ca href=\"https://www.python.org/\"\u003e\u003cimg alt=\"Python\" loading=\"lazy\" src=\"https://img.shields.io/badge/Python-3.11+-3776AB?style=flat-square\u0026logo=python\u0026logoColor=white\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eHigh-performance financial tick data scraper for Dukascopy Bank\u0026rsquo;s historical datafeed. Built for quantitative researchers and algorithmic traders who need reliable access to high-resolution market data.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFeatures:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eConcurrent downloads with intelligent resume capability\u003c/li\u003e\n\u003cli\u003eProxy support for distributed downloading\u003c/li\u003e\n\u003cli\u003eEfficient LZMA decompression and NumPy-based decoding\u003c/li\u003e\n\u003cli\u003ePandas integration with gap detection\u003c/li\u003e\n\u003cli\u003eSQLite metadata tracking\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eStack:\u003c/strong\u003e Python ‚Ä¢ httpx ‚Ä¢ NumPy ‚Ä¢ Pandas ‚Ä¢ SQLite ‚Ä¢ LZMA\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"proxyrotator\"\u003eProxyRotator\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/keyhankamyar/ProxyRotator\"\u003e\u003cimg alt=\"GitHub\" loading=\"lazy\" src=\"https://img.shields.io/badge/GitHub-ProxyRotator-181717?style=flat-square\u0026logo=github\"\u003e\u003c/a\u003e\n\u003ca href=\"https://pypi.org/project/xray-proxy-rotator/\"\u003e\u003cimg alt=\"PyPI\" loading=\"lazy\" src=\"https://img.shields.io/pypi/v/xray-proxy-rotator?style=flat-square\u0026logo=pypi\u0026logoColor=white\"\u003e\u003c/a\u003e\n\u003ca href=\"https://www.python.org/\"\u003e\u003cimg alt=\"Python\" loading=\"lazy\" src=\"https://img.shields.io/badge/Python-3.11+-3776AB?style=flat-square\u0026logo=python\u0026logoColor=white\"\u003e\u003c/a\u003e\u003c/p\u003e","title":"Projects"}]